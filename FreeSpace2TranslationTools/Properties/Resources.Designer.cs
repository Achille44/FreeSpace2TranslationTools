//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreeSpace2TranslationTools.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FreeSpace2TranslationTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FreeSpace 2 Translation Tools.
        /// </summary>
        public static string ApplicationTitle {
            get {
                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse....
        /// </summary>
        public static string Browse {
            get {
                return ResourceManager.GetString("Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à campaigns.
        /// </summary>
        public static string Campaign {
            get {
                return ResourceManager.GetString("Campaign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate new IDs in case of duplicates (this option will create files with new IDs in the destination folder). Almost mandatory if original files only contain &apos;-1&apos; as ID..
        /// </summary>
        public static string CheckBoxManageDuplicates {
            get {
                return ResourceManager.GetString("CheckBoxManageDuplicates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This functionality replaces hard coded strings with XSTR variables in the mod files listed below, then creates a tstrings.tbl from scratch, looking for all xstr variables located in the table and mission files of the mod (data) folder..
        /// </summary>
        public static string CreateMissingXstrDescription {
            get {
                return ResourceManager.GetString("CreateMissingXstrDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate tstrings with missing XSTR.
        /// </summary>
        public static string CreateMissingXstrTitle {
            get {
                return ResourceManager.GetString("CreateMissingXstrTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à credits.
        /// </summary>
        public static string Credits {
            get {
                return ResourceManager.GetString("Credits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à cutscenes.
        /// </summary>
        public static string Cutscenes {
            get {
                return ResourceManager.GetString("Cutscenes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Destination file.
        /// </summary>
        public static string DestinationFile {
            get {
                return ResourceManager.GetString("DestinationFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Destination folder.
        /// </summary>
        public static string DestinationFolder {
            get {
                return ResourceManager.GetString("DestinationFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à If not empty, identical files will be overwritten..
        /// </summary>
        public static string DestinationFolderTooltip {
            get {
                return ResourceManager.GetString("DestinationFolderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execution time: .
        /// </summary>
        public static string ExecutionTime {
            get {
                return ResourceManager.GetString("ExecutionTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Generate.
        /// </summary>
        public static string Generate {
            get {
                return ResourceManager.GetString("Generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à hud gauges.
        /// </summary>
        public static string HudGauges {
            get {
                return ResourceManager.GetString("HudGauges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The following directory is invalid: .
        /// </summary>
        public static string InvalidDirectory {
            get {
                return ResourceManager.GetString("InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The following file is invalid: .
        /// </summary>
        public static string InvalidFile {
            get {
                return ResourceManager.GetString("InvalidFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à main hall.
        /// </summary>
        public static string MainHall {
            get {
                return ResourceManager.GetString("MainHall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This value serves as a marker. Only the texts starting with this marker in the new translated file will be overwritten. If empty, all lines can be overwritten. Example: [24, &quot;(fr)Return to Base&quot;]. Here the marker (fr) indicates this line can be overwritten. But the line [13, &quot;Aucun&quot;] has no marker so it won&apos;t be overwritten..
        /// </summary>
        public static string MarkerDescription {
            get {
                return ResourceManager.GetString("MarkerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à medals.
        /// </summary>
        public static string Medals {
            get {
                return ResourceManager.GetString("Medals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Merge.
        /// </summary>
        public static string Merge {
            get {
                return ResourceManager.GetString("Merge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à missions.
        /// </summary>
        public static string Missions {
            get {
                return ResourceManager.GetString("Missions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mod folder.
        /// </summary>
        public static string ModFolder {
            get {
                return ResourceManager.GetString("ModFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ideally the data folder. Can contain subdirectories. Must contain table and mission files..
        /// </summary>
        public static string ModFolderTooltip {
            get {
                return ResourceManager.GetString("ModFolderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New original file.
        /// </summary>
        public static string NewOriginalFile {
            get {
                return ResourceManager.GetString("NewOriginalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à New file to be translated.
        /// </summary>
        public static string NewTranslatedFile {
            get {
                return ResourceManager.GetString("NewTranslatedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No valid file to be translated was found in the mod folder..
        /// </summary>
        public static string NoValidFileInFolder {
            get {
                return ResourceManager.GetString("NoValidFileInFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Old original file.
        /// </summary>
        public static string OldOriginalFile {
            get {
                return ResourceManager.GetString("OldOriginalFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Old translated file.
        /// </summary>
        public static string OldTranslatedFile {
            get {
                return ResourceManager.GetString("OldTranslatedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Original tstrings file.
        /// </summary>
        public static string OriginalTstringsFile {
            get {
                return ResourceManager.GetString("OriginalTstringsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process Complete!.
        /// </summary>
        public static string ProcessComplete {
            get {
                return ResourceManager.GetString("ProcessComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à rank.
        /// </summary>
        public static string Rank {
            get {
                return ResourceManager.GetString("Rank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à seconds.
        /// </summary>
        public static string Seconds {
            get {
                return ResourceManager.GetString("Seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ships.
        /// </summary>
        public static string Ships {
            get {
                return ResourceManager.GetString("Ships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source file.
        /// </summary>
        public static string SourceFile {
            get {
                return ResourceManager.GetString("SourceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Starting ID for duplicates (if no value, the starting value will be the existing max ID + 1).
        /// </summary>
        public static string StartingIdDescription {
            get {
                return ResourceManager.GetString("StartingIdDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Technical error:.
        /// </summary>
        public static string TechnicalError {
            get {
                return ResourceManager.GetString("TechnicalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This functionality will copy the content of an existing translation to a new one, detecting the identical text entries in both original files, even if the IDs are different. The new file to be translated will be overwritten..
        /// </summary>
        public static string UpdateTranslationDescription {
            get {
                return ResourceManager.GetString("UpdateTranslationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update translations.
        /// </summary>
        public static string UpdateTranslationTitle {
            get {
                return ResourceManager.GetString("UpdateTranslationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à weapons.
        /// </summary>
        public static string Weapons {
            get {
                return ResourceManager.GetString("Weapons", resourceCulture);
            }
        }
    }
}
